import numpy as np

x1 = np.array([[1,2],[3,4],[5,6]])
print('x1数组:')
print(x1)
y1 = x1[[0,1,2],[0,1,0]]
print('获取数组中(0,0),(1,1)和(2,0)位置处的元素:')
print(y1)
'''
x1数组:
[[1 2]
 [3 4]
 [5 6]]
获取数组中(0,0),(1,1)和(2,0)位置处的元素:
[1 4 5]
'''
print('-----------------------------------------------------')
x2 = np.array([[0,1,2],[3,4,5],[6,7,8],[9,10,11]])
print('x2数组:')
print(x2)
#等同于y2 = x2[[0,0,3,3],[0,2,0,2]]
rows = np.array([[0,0],[3,3]])
cols = np.array([[0,2],[0,2]])
y2 = x2[rows,cols]
print('这个数组的四角元素是:')
print(y2)
'''
x2数组:
[[ 0  1  2]
 [ 3  4  5]
 [ 6  7  8]
 [ 9 10 11]]
这个数组的四角元素是:
[ 0  2  9 11]
'''
print('-----------------------------------------------------')
#切片:或...与索引数组组合
a = np.array([[1,2,3],[4,5,6],[7,8,9]])
print('a数组:')
print(a)
b = a[1:,1:]
print('b数组:')
print(b)
c = a[1:,[1,2]] #[1,2]取第2列和第3列
print('c数组:')
print(c)
d = a[...,1:]
print('d数组:')
print(d)
'''
a数组:
[[1 2 3]
 [4 5 6]
 [7 8 9]]
b数组:
[[5 6]
 [8 9]]
c数组:
[[5 6]
 [8 9]]
d数组:
[[2 3]
 [5 6]
 [8 9]]
'''
print('-----------------------------------------------------')
#布尔索引通过布尔运算获取符合指定条件的元素的数组
x2 = np.array([[0,1,2],[3,4,5],[6,7,8],[9,10,11]])
print('x2数组:')
print(x2)
print('大于5的元素:')
print(x2[x2>5])
'''
x2数组:
[[ 0  1  2]
 [ 3  4  5]
 [ 6  7  8]
 [ 9 10 11]]
大于 5 的元素是：
[ 6  7  8  9 10 11]
'''
print('-----------------------------------------------------')
a = np.array([np.nan,1,2,np.nan,3,4,5])
# ~取补运算符过滤NaN
print('非空过滤数组:')
print(a[~np.isnan(a)])
'''
非空过滤数组:
[1. 2. 3. 4. 5.]
'''
print('-----------------------------------------------------')
a = np.array([1,2+6j,5,3.5+5j])
print('过滤复数数组:')
print(a[np.iscomplex(a)])
'''
过滤复数数组:
[2. +6.j 3.5+5.j]
'''
print('-----------------------------------------------------')
'''
花式索引指的是利用整数数组进行索引。
花式索引根据索引数组的值作为目标数组的某个轴的下标来取值。
对于使用一维整型数组作为索引，如果目标是一维数组，那么索引的结果就是对应位置的元素；
如果目标是二维数组，那么就是对应下标的行。
花式索引跟切片不一样，它总是将数据复制到新数组中。
'''
#传入顺序索引数组
x=np.arange(32).reshape((8,4))
print('x数组:')
print(x)
print('获取x数组顺序索引生成的数组:')
print(x[[4,2,1,7]])
'''
x数组:
[[ 0  1  2  3]
 [ 4  5  6  7]
 [ 8  9 10 11]
 [12 13 14 15]
 [16 17 18 19]
 [20 21 22 23]
 [24 25 26 27]
 [28 29 30 31]]
获取x数组顺序索引生成的数组:
[[16 17 18 19]
 [ 8  9 10 11]
 [ 4  5  6  7]
 [28 29 30 31]]
'''
print('-----------------------------------------------------')
print('获取x数组逆序索引生成的数组:')
print(x[[-4,-2,-1,-7]])
'''
获取x数组逆序索引生成的数组:
[[16 17 18 19]
 [24 25 26 27]
 [28 29 30 31]
 [ 4  5  6  7]]
'''
print('-----------------------------------------------------')
print('传入多个索引数组(要使用np.ix_)')
'''
np.ix_([1,5,7,2],[0,3,1,2]中
[1,5,7,2]获取第2,6,8,3行
[0,3,1,2]获取第1,4,2,3列
'''
print (x[np.ix_([1,5,7,2],[0,3,1,2])])
'''
传入多个索引数组(要使用np.ix_)
[[ 4  7  5  6]
 [20 23 21 22]
 [28 31 29 30]
 [ 8 11  9 10]]
'''