import numpy as np

'''
numpy.split 函数沿特定的轴将数组分割为子数组
numpy.split(ary, indices_or_sections, axis)
indices_or_sections：如果是一个整数，就用该数平均切分，如果是一个数组，为沿轴切分的位置（左开右闭） 
axis：沿着哪个维度进行切向，默认为0，横向切分。为1时，纵向切分
'''
a = np.arange(9)
print('第一个数组：')
print(a)
print('将数组分为三个大小相等的子数组：')
b = np.split(a,3)
print(b)
print('将数组在一维数组中表明的位置分割：')
b = np.split(a,[2,4,7])
print(b)
print('-----------------------------------------------------')
'''
第一个数组：
[0 1 2 3 4 5 6 7 8]
将数组分为三个大小相等的子数组：
[array([0, 1, 2]), array([3, 4, 5]), array([6, 7, 8])]
将数组在一维数组中表明的位置分割：
[2,4,7]可以理解为:
    2-0            4-2              7-4             剩余
[array([0, 1]), array([2, 3]), array([4, 5, 6]), array([7, 8])]
'''

#numpy.hsplit函数用于水平分割数组，通过指定要返回的相同形状的数组数量来拆分原数组
harr = np.floor(100 * np.random.random((2,8))) #生成2X8数组，每个值在100以内
print('原数组:')
print(harr)
print('水平拼接:')
print(np.hsplit(harr,4))
print('-----------------------------------------------------')
'''
原数组:
[[17. 38. 47. 89. 99. 37. 77. 97.]
 [17. 19.  1.  2. 51. 33. 72. 31.]]
拆分后:
[array([[17., 38.],[17., 19.]]), 
 array([[47., 89.],[ 1.,  2.]]), 
 array([[99., 37.],[51., 33.]]), 
 array([[77., 97.],[72., 31.]])]
'''

#numpy.vsplit沿着垂直轴分割，其分割方式与hsplit用法相同
a = np.arange(16).reshape(4,4)
print('第一个数组:')
print(a)
print('竖直拼接:')
b = np.vsplit(a,2)
print(b)
'''
第一个数组:
[[ 0  1  2  3]
 [ 4  5  6  7]
 [ 8  9 10 11]
 [12 13 14 15]]
竖直分割:
[array([[0, 1, 2, 3],[4, 5, 6, 7]]), 
 array([[8, 9, 10, 11],[12, 13, 14, 15]])]
'''