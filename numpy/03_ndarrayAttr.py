import numpy as np

a = np.arange(24) #创建等差数组
print(a)
print('a数组维度='+str(a.ndim))  # a 现只有一个维度
print('-----------------------------------------------------')
# 现在调整其大小,reshape的3个参数的乘积等于原先一维数组的长度
b = a.reshape(2,6,2)  # b 现在拥有三个维度
print(b)
print('b数组维度='+str(b.ndim))
'''
[ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23]
a数组维度=1
[[[ 0  1]
  [ 2  3]
  [ 4  5]
  [ 6  7]
  [ 8  9]
  [10 11]]

 [[12 13]
  [14 15]
  [16 17]
  [18 19]
  [20 21]
  [22 23]]]
b数组维度=3
'''
print('-----------------------------------------------------')

c = np.array([[1,2,3],[4,5,6]])
print('c数组大小='+str(c.shape))
# c数组大小=(2, 3)
print('-----------------------------------------------------')
d = np.array([[1,2,3],[4,5,6]])
d.shape = (3,2) #将数组调整为3行2列
print('打印d的3行2列数组:')
print(d)
'''
打印d的3行2列数组:
[[1 2]
 [3 4]
 [5 6]]
'''
print('-----------------------------------------------------')

#一个元素类型为float64的数组itemsize属性值为8(float64占用64个bits,每个字节长度为8，所以64/8,占用8个字节）
# 数组的 dtype 为 int8（一个字节）
e = np.array([1,2,3,4,5], dtype=np.int8)
print('e数组占用'+str(e.itemsize)+'个8字节') # e数组占用1个8字节
print('-----------------------------------------------------')
# 数组的 dtype 现在为 float64（八个字节）
f = np.array([1,2,3,4,5], dtype=np.float64)
print('f数组占用'+str(f.itemsize)+'个8字节') # f数组占用8个8字节
print('-----------------------------------------------------')
g = np.array([1,2,3,4,5])
print(g.flags) # 返回 ndarray 对象的内存信息
'''
C_CONTIGUOUS : True      #数据是在一个单一的C风格的连续段中
F_CONTIGUOUS : True      #数据是在一个单一的Fortran风格的连续段中
OWNDATA : True           #数组拥有它所使用的内存或从另一个对象中借用它
WRITEABLE : True         #数据区域可以被写入，将该值设置为 False，则数据为只读
ALIGNED : True           #数据和所有元素都适当地对齐到硬件上
WRITEBACKIFCOPY : False  #此数组是其他数组的副本
UPDATEIFCOPY : False     #这个数组是其它数组的一个副本，当这个数组被释放时，原数组的内容将被更新
'''
