import numpy.matlib
import numpy as np

'''
matlib.empty()函数返回一个新的矩阵
numpy.matlib.empty(shape, dtype, order)
shape: 定义新矩阵形状的整数或整数元组
Dtype: 可选，数据类型
order: C（行序优先） 或者 F（列序优先）
'''
print(np.matlib.empty((2,2))) # 填充为随机数据
print('-----------------------------------------------------')
'''
[[9.90263869e+067 8.01304531e+262]
 [2.60799828e-310 6.01346930e-154]]
'''

#numpy.matlib.zeros()函数创建一个以0填充的矩阵
print(np.matlib.zeros((2,2)))
print('-----------------------------------------------------')
'''
[[0. 0.]
 [0. 0.]]
'''

#numpy.matlib.ones()函数创建一个以1填充的矩阵
print(np.matlib.ones((2,2)))
print('-----------------------------------------------------')
'''
[[1. 1.]
 [1. 1.]]
'''

'''
numpy.matlib.eye()函数返回一个矩阵，对角线元素为1，其他位置为零
numpy.matlib.eye(n, M,k, dtype)
n: 返回矩阵的行数
M: 返回矩阵的列数，默认为 n
k: 对角线的索引
dtype: 数据类型
'''
print(np.matlib.eye(n=3,M=4,k=0,dtype=float))
print('-----------------------------------------------------')
'''
[[1. 0. 0. 0.]
 [0. 1. 0. 0.]
 [0. 0. 1. 0.]]
'''

'''
numpy.matlib.identity() 函数返回给定大小的单位矩阵
单位矩阵是个方阵，从左上角到右下角的对角线（称为主对角线）上的元素均为1，除此以外全都为0
'''
print(np.matlib.identity(5,dtype=float))
print('-----------------------------------------------------')
'''
[[1. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0.]
 [0. 0. 1. 0. 0.]
 [0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 1.]]
'''

#numpy.matlib.rand()函数创建一个给定大小的矩阵，数据是随机填充的
print (np.matlib.rand(3,3))
print('-----------------------------------------------------')
'''
[[0.22741839 0.41341901 0.81863817]
 [0.69418085 0.87970331 0.55831519]
 [0.91179528 0.10344144 0.2266316 ]]
'''

i = np.matrix('1,2;3,4')
print('matrix矩阵:')
print(i)
j = np.asarray(i)
print('matrix矩阵转数组:')
print(j)
k = np.asmatrix(j)
print('数组转matrix矩阵:')
print(k)
print('-----------------------------------------------------')
'''
matrix矩阵:
[[1 2]
 [3 4]]
matrix矩阵转数组:
[[1 2]
 [3 4]]
数组转matrix矩阵:
[[1 2]
 [3 4]]
'''