import pandas as pd
import numpy as np

#DataFrame应用聚合
df = pd.DataFrame(np.random.randn(10,4),index = pd.date_range('1/1/2020',periods=10),columns=['A','B','C','D'])
print(df)
print('-----------------------------------------------------')
r = df.rolling(window=3,min_periods=1)
print(r)
print('-----------------------------------------------------')
'''
center：是否使用window的中间值作为label，默认为false。只能在window是int时使用
axis：方向（轴），一般都是0。
                   A         B         C         D
2020-01-01  0.450129 -0.900990  0.356706  3.103130
2020-01-02  1.117249  1.577195 -0.705528  0.377157
2020-01-03  0.119370  1.290573 -1.525214 -0.144611
2020-01-04  0.411205  0.358959 -0.445717 -1.074130
2020-01-05  2.021087  0.077826  0.428494  0.490440
2020-01-06 -0.004218 -0.363556 -0.046648  0.699513
2020-01-07 -0.438273 -0.097992  1.020388  1.346110
2020-01-08  0.990499 -0.984640  0.353488 -0.272592
2020-01-09 -0.523214  0.892051 -1.481710  1.178931
2020-01-10  1.965743 -1.031897 -0.886900 -0.692204
-----------------------------------------------------
Rolling [window=3,min_periods=1,center=False,axis=0]
'''

#在整个数据框上应用聚合
df = pd.DataFrame(np.random.randn(10,4),index = pd.date_range('1/1/2020', periods=10),columns=['A','B','C','D'])
print(df)
print('-----------------------------------------------------')
r = df.rolling(window=3,min_periods=1)
print(r.aggregate(np.sum))
print('-----------------------------------------------------')
'''
                   A         B         C         D
2020-01-01  0.091180 -0.464549  0.066689  0.916534
2020-01-02 -0.499319 -0.699494 -2.412752  1.272007
2020-01-03  2.959990 -0.267413 -1.235907  0.131866
2020-01-04 -1.013694  0.303139  0.287863 -0.095312
2020-01-05  1.813869  0.859056  0.045980  0.483206
2020-01-06  1.318380 -0.599435 -2.229783  1.349233
2020-01-07  0.966320  1.664364  0.804134 -0.787786
2020-01-08  0.272886  0.369992  1.090946  1.365628
2020-01-09 -0.535797  0.078096 -0.168134 -1.263044
2020-01-10 -0.578639 -0.860803 -1.715491  0.284100
-----------------------------------------------------
                   A         B         C         D
2020-01-01  0.091180 -0.464549  0.066689  0.916534
2020-01-02 -0.408139 -1.164042 -2.346062  2.188542
2020-01-03  2.551851 -1.431455 -3.581969  2.320408
2020-01-04  1.446977 -0.663767 -3.360796  1.308561
2020-01-05  3.760165  0.894782 -0.902064  0.519760
2020-01-06  2.118554  0.562760 -1.895940  1.737127
2020-01-07  4.098569  1.923985 -1.379669  1.044653
2020-01-08  2.557586  1.434921 -0.334704  1.927075
2020-01-09  0.703410  2.112452  1.726945 -0.685202
2020-01-10 -0.841550 -0.412714 -0.792680  0.386685
'''

#在数据框的单个列上应用聚合
df = pd.DataFrame(np.random.randn(10,4),index = pd.date_range('1/1/2020',periods=10),columns=['A','B','C','D'])
print (df)
print('-----------------------------------------------------')
r = df.rolling(window=3,min_periods=1)
print(r['A'].aggregate(np.sum))
print('-----------------------------------------------------')
'''
                   A         B         C         D
2020-01-01 -0.159793  2.332694 -1.132104 -1.649017
2020-01-02  0.866739  0.356863  0.595871 -0.077711
2020-01-03 -0.272931 -1.688967  1.027419  0.856122
2020-01-04 -0.729156 -0.545607  0.000087  1.021796
2020-01-05 -0.830559  0.216367 -1.336669  0.929079
2020-01-06  0.473782  0.905412  1.825766 -1.253611
2020-01-07 -1.273268 -0.277548 -0.637636  2.188950
2020-01-08  1.241620  1.561482 -1.188475  0.618763
2020-01-09  0.752900  1.552507  1.287481  1.581778
2020-01-10  0.635065  0.844608  0.553450 -1.411275
-----------------------------------------------------
2020-01-01   -0.159793
2020-01-02    0.706946
2020-01-03    0.434015
2020-01-04   -0.135348
2020-01-05   -1.832646
2020-01-06   -1.085933
2020-01-07   -1.630045
2020-01-08    0.442135
2020-01-09    0.721253
2020-01-10    2.629585
Freq: D, Name: A, dtype: float64
'''

#在DataFrame的多列上应用聚合
df = pd.DataFrame(np.random.randn(10,4),index=pd.date_range('1/1/2020',periods=10),columns=['A','B','C','D'])
print (df)
print('-----------------------------------------------------')
r = df.rolling(window=3,min_periods=1)
print(r[['A','B']].aggregate(np.sum))
print('-----------------------------------------------------')
'''
                   A         B         C         D
2020-01-01 -0.532197 -0.412857  2.237660 -1.599582
2020-01-02  1.173663 -2.326405  0.178513 -0.001078
2020-01-03  0.649076  1.560348 -0.063243 -0.542045
2020-01-04  0.537055 -0.907401  0.844843  0.852098
2020-01-05  0.209345 -0.685193 -0.941454  0.518745
2020-01-06  0.375831 -1.260716  0.141726  0.321746
2020-01-07  1.480399 -0.588602  1.480700 -0.582184
2020-01-08 -0.342907  0.848066  0.201876  0.214142
2020-01-09  0.859318  0.863740  0.596192 -0.122264
2020-01-10  1.001666 -0.090725 -0.920336  0.474694
-----------------------------------------------------
                   A         B
2020-01-01 -0.532197 -0.412857
2020-01-02  0.641466 -2.739262
2020-01-03  1.290542 -1.178914
2020-01-04  2.359794 -1.673459
2020-01-05  1.395476 -0.032246
2020-01-06  1.122231 -2.853310
2020-01-07  2.065575 -2.534511
2020-01-08  1.513323 -1.001252
2020-01-09  1.996810  1.123204
2020-01-10  1.518077  1.621081
'''

#在DataFrame的单个列上应用多个函数
df = pd.DataFrame(np.random.randn(10, 4),index=pd.date_range('1/1/2020',periods=10),columns=['A','B','C','D'])
print(df)
print('-----------------------------------------------------')
r = df.rolling(window=3,min_periods=1)
print(r['A'].aggregate([np.sum,np.mean]))
print('-----------------------------------------------------')
'''
                   A         B         C         D
2020-01-01 -1.416697 -0.672519  0.575624  1.993651
2020-01-02 -0.066695  1.290070  1.240923  1.919373
2020-01-03 -0.069947  0.747640 -0.881398  0.859402
2020-01-04 -0.876404 -0.137652 -0.386061  0.395313
2020-01-05  1.491495  1.173044 -0.735010 -0.179400
2020-01-06  0.028511  1.188002  1.027146  1.570413
2020-01-07  0.167031  0.438078  2.465132 -0.063331
2020-01-08  2.025090 -0.513925 -2.598646  0.663547
2020-01-09  0.728647  0.628917 -1.778898 -1.410756
2020-01-10 -0.982544 -0.300962 -0.739327  0.645399
-----------------------------------------------------
                 sum      mean
2020-01-01 -1.416697 -1.416697
2020-01-02 -1.483392 -0.741696
2020-01-03 -1.553339 -0.517780
2020-01-04 -1.013046 -0.337682
2020-01-05  0.545144  0.181715
2020-01-06  0.643602  0.214534
2020-01-07  1.687037  0.562346
2020-01-08  2.220632  0.740211
2020-01-09  2.920767  0.973589
2020-01-10  1.771193  0.590398
'''

#在DataFrame的多列上应用多个函数
df = pd.DataFrame(np.random.randn(10, 4),index=pd.date_range('1/1/2020',periods=10),columns=['A','B','C','D'])
print(df)
print('-----------------------------------------------------')
r = df.rolling(window=3,min_periods=1)
print (r[['A','B']].aggregate([np.sum,np.mean]))
print('-----------------------------------------------------')
'''
                   A         B         C         D
2020-01-01  1.451193  0.521224 -0.564822 -0.965382
2020-01-02  1.971833  0.605096 -0.715363  1.177500
2020-01-03  0.446355  0.395159  0.053568  1.545635
2020-01-04 -1.316165 -0.397848 -0.592018  2.579740
2020-01-05 -1.359946  1.219463 -2.100965 -1.577031
2020-01-06  0.174448  0.385219  0.931215  1.326469
2020-01-07  0.785269 -0.631900  1.836995 -0.000837
2020-01-08  3.523067 -1.389881  0.193787  0.919557
2020-01-09  0.468456 -3.060250 -0.606183 -0.991065
2020-01-10  0.790295  0.240566  0.884284 -1.874619
-----------------------------------------------------
                   A                   B          
                 sum      mean       sum      mean
2020-01-01  1.451193  1.451193  0.521224  0.521224
2020-01-02  3.423026  1.711513  1.126319  0.563160
2020-01-03  3.869381  1.289794  1.521479  0.507160
2020-01-04  1.102023  0.367341  0.602407  0.200802
2020-01-05 -2.229757 -0.743252  1.216774  0.405591
2020-01-06 -2.501663 -0.833888  1.206834  0.402278
2020-01-07 -0.400229 -0.133410  0.972781  0.324260
2020-01-08  4.482784  1.494261 -1.636562 -0.545521
2020-01-09  4.776792  1.592264 -5.082031 -1.694010
2020-01-10  4.781818  1.593939 -4.209565 -1.403188
'''

#将不同的函数应用于DataFrame的不同列
df = pd.DataFrame(np.random.randn(10, 4),index=pd.date_range('1/1/2020',periods=10),columns=['A','B','C','D'])
print(df)
print('-----------------------------------------------------')
r = df.rolling(window=3,min_periods=1)
print (r.aggregate({'A':np.sum,'B':np.mean}))
print('-----------------------------------------------------')
'''
                   A         B         C         D
2020-01-01 -2.119849  0.353753 -1.711073 -0.195928
2020-01-02  0.800446 -1.244544 -1.069103  0.791791
2020-01-03  0.835207  1.556352 -1.045580  0.327583
2020-01-04 -0.594218  0.663646  1.187031  0.396174
2020-01-05 -1.039388 -0.128917  0.207353 -1.506756
2020-01-06 -0.647252 -0.776934 -0.314472  0.404575
2020-01-07 -1.119634 -0.111597 -0.137337 -0.916119
2020-01-08  0.196758 -0.054238  2.168289 -0.614651
2020-01-09  0.671659  1.616051  1.170277 -1.629262
2020-01-10  0.623116 -1.978896  0.450222  0.465762
-----------------------------------------------------
                   A         B
2020-01-01 -2.119849  0.353753
2020-01-02 -1.319403 -0.445396
2020-01-03 -0.484196  0.221854
2020-01-04  1.041435  0.325151
2020-01-05 -0.798399  0.697027
2020-01-06 -2.280858 -0.080735
2020-01-07 -2.806274 -0.339149
2020-01-08 -1.570129 -0.314256
2020-01-09 -0.251218  0.483405
2020-01-10  1.491532 -0.139028
'''